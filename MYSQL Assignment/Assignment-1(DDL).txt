Assignment-1(DDL)

1.Write an SQL statement to create a simple table countries including columns
country_id,country_name and region_id.
->create table countries (country_id int,country_name varchar(20),region_id int);

2.Write an SQL statement to create a table named jobs including columns
job_id, job_title, min_salary, max_salary and check whether the
max_salary amount exceeding the upper limit 25000. Also set job_id as
primary key and entering null values for job_title is not allowed.
->create table jobs(job_id int primary key,job_title varchar(20) null,min_salary double,max_salary double check(max_salary>25000));

3.Write a SQL statement to create a table named job_histry including columns
employee_id, start_date, end_date, job_id and department_id.
->create table job_history(employee_id int primary key,start_date date,end_date date,job_id int,department_id int);

4.Write an SQL statement to alter a table named countries to make sure that no
duplicate data against column country_id will be allowed at the time of
insertion.
->alter table countries
 modify column country_id int primary key;

5.Write an SQL statement to create a table named jobs including columns job_id,
job_title, min_salary and max_salary, and make sure that, the default value
for job_title is blank and min_salary is 8000 and max_salary is NULL will be
entered automatically at the time of insertion if no value assigned for the
specified columns.
->alter table jobs
  modify column min_salary double default 8000,
  modify column max_salary double default Null;

6.Create a Department table with following structure
->create table Department(Department_id decimal(4,0) not null primary key,Department_Name varchar(30) not null,Manager_id decimal(6,0) not null,Location_id decimal(4,0));

7.Write an SQL statement to create a table employees including columns
employee_id, first_name, last_name, email, phone_number hire_date, job_id,
salary, commission, manager_id and department_id and make sure that, the
employee_id column does not contain any duplicate value at the time of
insertion and the foreign key columns combined by department_id and
manager_id columns contain only those unique combination values, which
combinations are exists in the departments table.
-> create table employee (employee_id int primary key,first_name varchar(20),last_name varchar(20),email varchar(20) unique,phone_number int(10) unique,hire_date date,job_id int,salary int,commission int,manager_id decimal(6,0) unique,department_id decimal(4,0) unique);

